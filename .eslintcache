[{"/Users/Divya/Desktop/yendapallyportfolio/src/index.js":"1","/Users/Divya/Desktop/yendapallyportfolio/src/App.js":"2","/Users/Divya/Desktop/yendapallyportfolio/src/reportWebVitals.js":"3","/Users/Divya/Desktop/yendapallyportfolio/src/components/SinglePost.js":"4","/Users/Divya/Desktop/yendapallyportfolio/src/components/Post.js":"5","/Users/Divya/Desktop/yendapallyportfolio/src/components/Home.js":"6","/Users/Divya/Desktop/yendapallyportfolio/src/components/SingleProject.js":"7","/Users/Divya/Desktop/yendapallyportfolio/src/components/NavBar.js":"8","/Users/Divya/Desktop/yendapallyportfolio/src/components/Resume.js":"9","/Users/Divya/Desktop/yendapallyportfolio/src/components/Project.js":"10","/Users/Divya/Desktop/yendapallyportfolio/src/components/About.js":"11","/Users/Divya/Desktop/yendapallyportfolio/src/client.js":"12","/Users/Divya/Desktop/yendapallyportfolio/src/OnClick.js":"13"},{"size":499,"mtime":1632192132382,"results":"14","hashOfConfig":"15"},{"size":942,"mtime":1632192132378,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1632192132395,"results":"17","hashOfConfig":"15"},{"size":4483,"mtime":1632192132382,"results":"18","hashOfConfig":"15"},{"size":2428,"mtime":1632192132381,"results":"19","hashOfConfig":"15"},{"size":1275,"mtime":1633041109514,"results":"20","hashOfConfig":"15"},{"size":6268,"mtime":1632192132382,"results":"21","hashOfConfig":"15"},{"size":4912,"mtime":1632365502114,"results":"22","hashOfConfig":"15"},{"size":603,"mtime":1633012789677,"results":"23","hashOfConfig":"15"},{"size":2408,"mtime":1632192132381,"results":"24","hashOfConfig":"15"},{"size":2222,"mtime":1633494349761,"results":"25","hashOfConfig":"15"},{"size":129,"mtime":1632192132380,"results":"26","hashOfConfig":"15"},{"size":305,"mtime":1632264705427,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"dat80d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/Divya/Desktop/yendapallyportfolio/src/index.js",[],["60","61"],"/Users/Divya/Desktop/yendapallyportfolio/src/App.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/reportWebVitals.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/SinglePost.js",["62"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport YouTube from 'react-youtube';\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function OnePost() {\n  const [postData, setPostData] = useState(null);\n  const { slug } = useParams();\n\n\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n           title,\n           title1,\n           slug,\n           mainImage{\n           asset->{\n              _id,\n              url\n            }\n          },\n          body,\n          video,\n          \"name\": author->name,\n          \"authorImage\": author->image\n          \n       }`\n      )\n      .then((data) => setPostData(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n  if (!postData) return <div>Loading...</div>;\n\n  \n  if (postData.title == (\"Accessibility Design towards the Mental Health Sector, specifically Post Traumatic Stress Disorder (PTSD)\")) return (\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full items-center flex justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                {postData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n\n\n                \n                <img\n                  src={urlFor(postData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Author is Kap\"\n                />\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {postData.name}\n                  \n                </h4>\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(postData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n         \n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          <BlockContent\n            blocks={postData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n           \n          />\n          \n        \n \n       \n \n        \n\n          \n\n         <YouTube videoId= {postData.title1} className = \"container mx-auto py-0 px-20\"> </YouTube> \n \n\n         \n        </div>\n      </div>\n      \n    </div>\n  );\n  else{\n    return (\n      <div className=\"bg-gray-200 min-h-screen p-12\">\n        <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n          <div className=\"relative\">\n            <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n              {/* Title Section */}\n              <div className=\"bg-white bg-opacity-75 rounded p-12\">\n                <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                  {postData.title}\n                </h2>\n                <div className=\"flex justify-center text-gray-800\">\n  \n  \n                  \n                  <img\n                    src={urlFor(postData.authorImage).url()}\n                    className=\"w-10 h-10 rounded-full\"\n                    alt=\"Author is Kap\"\n                  />\n                  <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                    {postData.name}\n                    \n                  </h4>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"w-full object-cover rounded-t\"\n              src={urlFor(postData.mainImage).url()}\n              alt=\"\"\n              style={{ height: \"400px\" }}\n            />\n           \n          </div>\n          <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n            <BlockContent\n              blocks={postData.body}\n              projectId={sanityClient.clientConfig.projectId}\n              dataset={sanityClient.clientConfig.dataset}\n             \n            />         \n          </div>\n        </div>\n        \n      </div>\n    )}\n}","/Users/Divya/Desktop/yendapallyportfolio/src/components/Post.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/Home.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/SingleProject.js",["63","64"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport YouTube from \"react-youtube\";\n\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function SinleProject({blocks}) {\n  const [projectData, setProjectData] = useState(null);\n  const { slug } = useParams();\n  \n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n           title,\n           title1,\n           title2,\n           tube,\n           slug,\n           mainImage{\n           asset->{\n              _id,\n              url\n            }\n          },\n          body,\n          bodyPortableText,\n          \"name\": author->name,\n          \"authorImage\": author->image\n       }`\n      )\n      .then((data) => setProjectData(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n\n  if (!projectData) return <div>Loading...</div>;\n  \n  \n  if (projectData.title == (\"T.I.M.E. Trauma-Informed-Medicine-Education\")) return (\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                {projectData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n                <img\n                  src={urlFor(projectData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Author is Kap\"\n                />\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {projectData.name}\n                 \n                </h4>\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(projectData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          {projectData.videoLink}\n          \n          \n          <BlockContent\n            blocks={projectData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n          />\n        \n             \n        <YouTube videoId= {projectData.title1}> </YouTube>\n          \n          \n          \n          \n          \n        </div>\n      </div>\n    </div>\n  )\n  \n  else if (projectData.title == (\"Recover- Creating a more Sustainable Future\")) return (\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n            <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                {projectData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n                <img\n                  src={urlFor(projectData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Author is Kap\"\n                />\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {projectData.name}\n                 \n                </h4>\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(projectData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          {projectData.videoLink}\n          \n          \n          <BlockContent\n            blocks={projectData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n          />\n        \n             \n        <YouTube videoId= {projectData.title1}> </YouTube>\n          \n          \n          \n          \n          \n        </div>\n      </div>\n    </div>\n  )\n  else{\n    return (\n      <div className=\"bg-gray-200 min-h-screen p-12\">\n        <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n          <div className=\"relative\">\n            <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n              {/* Title Section */}\n              <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                  \n                  {projectData.title}\n  \n                </h2>\n                <div className=\"flex justify-center text-gray-800\">\n                  <img\n                    src={urlFor(projectData.authorImage).url()}\n                    className=\"w-10 h-10 rounded-full\"\n                    alt=\"Author is Kap\"\n                  />\n                  <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                    {projectData.name}\n                   \n                  </h4>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"w-full object-cover rounded-t\"\n              src={urlFor(projectData.mainImage).url()}\n              alt=\"\"\n              style={{ height: \"400px\" }}\n            />\n          </div>\n          <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n            {projectData.videoLink}\n            \n            \n            <BlockContent\n              blocks={projectData.body}\n              projectId={sanityClient.clientConfig.projectId}\n              dataset={sanityClient.clientConfig.dataset}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n \n}","/Users/Divya/Desktop/yendapallyportfolio/src/components/NavBar.js",["65"],"import React, { Component } from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport {SocialIcon} from \"react-social-icons\"\nimport '../index.css';\nimport '../OnClick.js';\nimport { render } from \"react-dom\";\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"> </link>\n\nclass NavBar extends Component {\ncontainer = React.createRef();\nstate = {\n    open: false,\n};\n\nhandleButtonClick = () => {\n    this.setState((state) => {\n        return {\n            open: !this.state.open,\n        };\n    });\n};\n\ncomponentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n}\ncomponentWillUnmount() {\n  document.removeEventListener(\"mousedown\", this.handleClickOutside);\n}\n\nhandleClickOutside = (event) => {\n    if (\n      this.container.current &&\n      !this.container.current.contains(event.target)\n    ) {\n      this.setState({\n        open: false,\n      });\n    }\n  };\n\n\n    render(){\n\n    \n    return (\n        <header className= \"bg-red-200\">\n\n        \n            <div class=\"md:hidden flex items-center\">\n            <div className = \"container\" ref={this.container}>\n\t        <button class=\"outline-none mobile-menu-button\" onClick = {this.handleButtonClick}>\n                    <svg\n                        class=\"w-12 h- text-black-500\"\n                        x-show=\"!showMenu\"\n                        fill=\"none\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                    <path d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                    </svg>\n\t        \n                  \n                    </button>\n            {this.state.open && ( \n            <div class = \"dropdown\">\n            <ul>\n\n                \n                <a  href = \"/project\">UI UX Projects<br></br></a> \n                \n                <a  href = \"/post\">HCI Research<br></br></a>\n\n                <a  href = \"/about\">About <br></br></a>\n\n                <a  href = \"/resume\"> Resume <br></br></a>\n\n               \n\n                   \n            \n               \n            </ul>\n            </div>\n\n\n            )}\n            </div>\n            <NavLink to= \"/\" \nexact \nactiveClassName= \"text-white-100\"\nclassName= \"inline-flex items-center py-6 px-3 mr-4 text-gray-800 hover:text-white text-4xl font-Verdana tracking-widest\"\n> \n &#60;DIV&#62;\n</NavLink>\n            </div>\n\n            <div class= \"relative container mx-auto flex justify-between \">\n                <nav className = \" hidden md:block relative flex flex-wrap items-center justify-between px-1 py-2 navbar-expand-lg mb-3\" >\n                    <NavLink to= \"/\" \n                    exact \n                    activeClassName= \"text-white-100\"\n                    className= \"inline-flex items-center py-6 px-3 mr-4 text-gray-800 hover:text-white text-4xl font-Verdana tracking-widest\"\n                    > \n                     &#60;DIV&#62;\n                    </NavLink>\n                   \n                    <NavLink to= \"/project\"\n                    className= \"inline-flex items-center py-3 px-3 my-6 rounded text-gray-800 hover:text-white \"\n                    activeClassName= \"bg-red-300 text-white\">\n                        UI UX Projects\n                    </NavLink>\n                    \n                    <NavLink to =\"/post\"\n                    className= \"inline-flex items-center py-3 px-3 my-6 rounded text-gray-800 hover:text-white\"\n                    activeClassName= \"bg-red-300 text-white\">\n                        HCI Research\n                    </NavLink>\n                   \n                    <NavLink to= \"/about\"\n                    className= \"inline-flex items-center py-3 px-3 my-6 rounded text-gray-800 hover:text-white\"\n                    activeClassName= \"bg-red-300 text-white\">\n                        About Me\n                    </NavLink>\n\n                    <NavLink to= \"/resume\"\n                    className= \"inline-flex items-center py-3 px-3 my-6 rounded text-gray-800 hover:text-white\"\n                    activeClassName= \"bg-red-300 text-white\">\n                        Resume\n                    </NavLink>\n\n                </nav>\n                <div className= \"hidden md:block inline-flex py-3 px-3 my-6\">\n                    <SocialIcon url = \"https://www.linkedin.com/in/divya-y-78a3a293/\" className=\"mr-4\" target=\"_blank\" fgColor=\"#fff\" style={{height: 35, width:35}}></SocialIcon>\n                    <SocialIcon url = \"https://github.com/techsaco\" className=\"mr-4\" target=\"_blank\" fgColor=\"#fff\" style={{height: 35, width:35}}></SocialIcon>\n                </div>\n\n\n                \n\n                \n            </div>\n            \n        </header>\n    )\n            }\n}\n\nexport default NavBar;","/Users/Divya/Desktop/yendapallyportfolio/src/components/Resume.js",["66","67","68"],"import React, {useEffect, useState} from \"react\";\nimport \"../App.css\";\nimport \"../index.css\"\nimport resume from \"../Yendapally_Divya_Resume.pdf\"\nimport resumeImage from \"../resumeimage.jpg\"\nexport default function Resume(){\n    \n    \n    \n    return (\n        \n        <main>\n             <h2 className = \"font-Segoe UI text-1xl text-blue-600 mb-4\">\n             <p>  <a href={resume}> DOWNLOAD MY RESUME </a></p>\n                        </h2>\n            <img src= {resumeImage} width= \"800\" height = \"121\" class= \"center border\"/>\n                        \n                    \n        </main>\n    );\n}","/Users/Divya/Desktop/yendapallyportfolio/src/components/Project.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/About.js",["69","70","71"],"/Users/Divya/Desktop/yendapallyportfolio/src/client.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/OnClick.js",["72"],"import React, {Component} from \"react\";\nclass OnClick extends Component {\n    state = {\n        open: false,\n    };\n\n    handleButtonClick = () => {\n        this.setState((state) => {\n            return {\n                open: !this.state.open,\n            };\n        });\n    };\n}\n\nexport default OnClick;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":46,"column":22,"nodeType":"79","messageId":"80","endLine":46,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":48,"column":25,"nodeType":"79","messageId":"80","endLine":48,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":100,"column":30,"nodeType":"79","messageId":"80","endLine":100,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":16,"column":13,"nodeType":"89","endLine":16,"endColumn":89},{"ruleId":"81","severity":1,"message":"90","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":13},{"ruleId":"81","severity":1,"message":"91","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":22,"column":9,"nodeType":"94","messageId":"95","endLine":28,"endColumn":26,"fix":"96"},{"ruleId":"81","severity":1,"message":"97","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'image' is defined but never used.","'resume' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"100","text":"101"},"'React' is defined but never used.","no-global-assign","no-unsafe-negation",[747,749],"."]