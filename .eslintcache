[{"/Users/Divya/Desktop/yendapallyportfolio/src/index.js":"1","/Users/Divya/Desktop/yendapallyportfolio/src/App.js":"2","/Users/Divya/Desktop/yendapallyportfolio/src/reportWebVitals.js":"3","/Users/Divya/Desktop/yendapallyportfolio/src/components/SinglePost.js":"4","/Users/Divya/Desktop/yendapallyportfolio/src/components/Post.js":"5","/Users/Divya/Desktop/yendapallyportfolio/src/components/Home.js":"6","/Users/Divya/Desktop/yendapallyportfolio/src/components/SingleProject.js":"7","/Users/Divya/Desktop/yendapallyportfolio/src/components/NavBar.js":"8","/Users/Divya/Desktop/yendapallyportfolio/src/components/Resume.js":"9","/Users/Divya/Desktop/yendapallyportfolio/src/components/Project.js":"10","/Users/Divya/Desktop/yendapallyportfolio/src/components/About.js":"11","/Users/Divya/Desktop/yendapallyportfolio/src/client.js":"12","/Users/Divya/Desktop/yendapallyportfolio/src/OnClick.js":"13"},{"size":499,"mtime":1632192132382,"results":"14","hashOfConfig":"15"},{"size":942,"mtime":1632192132378,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1632192132395,"results":"17","hashOfConfig":"15"},{"size":4483,"mtime":1632192132382,"results":"18","hashOfConfig":"15"},{"size":2428,"mtime":1632192132381,"results":"19","hashOfConfig":"15"},{"size":1749,"mtime":1632361881521,"results":"20","hashOfConfig":"15"},{"size":6268,"mtime":1632192132382,"results":"21","hashOfConfig":"15"},{"size":5076,"mtime":1632361881518,"results":"22","hashOfConfig":"15"},{"size":594,"mtime":1632192132381,"results":"23","hashOfConfig":"15"},{"size":2408,"mtime":1632192132381,"results":"24","hashOfConfig":"15"},{"size":1927,"mtime":1632192132380,"results":"25","hashOfConfig":"15"},{"size":129,"mtime":1632192132380,"results":"26","hashOfConfig":"15"},{"size":305,"mtime":1632264705427,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"dat80d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Divya/Desktop/yendapallyportfolio/src/index.js",[],["59","60"],"/Users/Divya/Desktop/yendapallyportfolio/src/App.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/reportWebVitals.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/SinglePost.js",["61"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport YouTube from 'react-youtube';\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function OnePost() {\n  const [postData, setPostData] = useState(null);\n  const { slug } = useParams();\n\n\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n           title,\n           title1,\n           slug,\n           mainImage{\n           asset->{\n              _id,\n              url\n            }\n          },\n          body,\n          video,\n          \"name\": author->name,\n          \"authorImage\": author->image\n          \n       }`\n      )\n      .then((data) => setPostData(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n  if (!postData) return <div>Loading...</div>;\n\n  \n  if (postData.title == (\"Accessibility Design towards the Mental Health Sector, specifically Post Traumatic Stress Disorder (PTSD)\")) return (\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full items-center flex justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                {postData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n\n\n                \n                <img\n                  src={urlFor(postData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Author is Kap\"\n                />\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {postData.name}\n                  \n                </h4>\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(postData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n         \n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          <BlockContent\n            blocks={postData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n           \n          />\n          \n        \n \n       \n \n        \n\n          \n\n         <YouTube videoId= {postData.title1} className = \"container mx-auto py-0 px-20\"> </YouTube> \n \n\n         \n        </div>\n      </div>\n      \n    </div>\n  );\n  else{\n    return (\n      <div className=\"bg-gray-200 min-h-screen p-12\">\n        <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n          <div className=\"relative\">\n            <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n              {/* Title Section */}\n              <div className=\"bg-white bg-opacity-75 rounded p-12\">\n                <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                  {postData.title}\n                </h2>\n                <div className=\"flex justify-center text-gray-800\">\n  \n  \n                  \n                  <img\n                    src={urlFor(postData.authorImage).url()}\n                    className=\"w-10 h-10 rounded-full\"\n                    alt=\"Author is Kap\"\n                  />\n                  <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                    {postData.name}\n                    \n                  </h4>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"w-full object-cover rounded-t\"\n              src={urlFor(postData.mainImage).url()}\n              alt=\"\"\n              style={{ height: \"400px\" }}\n            />\n           \n          </div>\n          <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n            <BlockContent\n              blocks={postData.body}\n              projectId={sanityClient.clientConfig.projectId}\n              dataset={sanityClient.clientConfig.dataset}\n             \n            />         \n          </div>\n        </div>\n        \n      </div>\n    )}\n}","/Users/Divya/Desktop/yendapallyportfolio/src/components/Post.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/Home.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/SingleProject.js",["62","63"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport YouTube from \"react-youtube\";\n\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function SinleProject({blocks}) {\n  const [projectData, setProjectData] = useState(null);\n  const { slug } = useParams();\n  \n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n           title,\n           title1,\n           title2,\n           tube,\n           slug,\n           mainImage{\n           asset->{\n              _id,\n              url\n            }\n          },\n          body,\n          bodyPortableText,\n          \"name\": author->name,\n          \"authorImage\": author->image\n       }`\n      )\n      .then((data) => setProjectData(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n\n  if (!projectData) return <div>Loading...</div>;\n  \n  \n  if (projectData.title == (\"T.I.M.E. Trauma-Informed-Medicine-Education\")) return (\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                {projectData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n                <img\n                  src={urlFor(projectData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Author is Kap\"\n                />\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {projectData.name}\n                 \n                </h4>\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(projectData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          {projectData.videoLink}\n          \n          \n          <BlockContent\n            blocks={projectData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n          />\n        \n             \n        <YouTube videoId= {projectData.title1}> </YouTube>\n          \n          \n          \n          \n          \n        </div>\n      </div>\n    </div>\n  )\n  \n  else if (projectData.title == (\"Recover- Creating a more Sustainable Future\")) return (\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n            <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                {projectData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n                <img\n                  src={urlFor(projectData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Author is Kap\"\n                />\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {projectData.name}\n                 \n                </h4>\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(projectData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          {projectData.videoLink}\n          \n          \n          <BlockContent\n            blocks={projectData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n          />\n        \n             \n        <YouTube videoId= {projectData.title1}> </YouTube>\n          \n          \n          \n          \n          \n        </div>\n      </div>\n    </div>\n  )\n  else{\n    return (\n      <div className=\"bg-gray-200 min-h-screen p-12\">\n        <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n          <div className=\"relative\">\n            <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n              {/* Title Section */}\n              <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"font-verdana text-3xl lg:text-2xl mb-4\">\n                  \n                  {projectData.title}\n  \n                </h2>\n                <div className=\"flex justify-center text-gray-800\">\n                  <img\n                    src={urlFor(projectData.authorImage).url()}\n                    className=\"w-10 h-10 rounded-full\"\n                    alt=\"Author is Kap\"\n                  />\n                  <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                    {projectData.name}\n                   \n                  </h4>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"w-full object-cover rounded-t\"\n              src={urlFor(projectData.mainImage).url()}\n              alt=\"\"\n              style={{ height: \"400px\" }}\n            />\n          </div>\n          <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n            {projectData.videoLink}\n            \n            \n            <BlockContent\n              blocks={projectData.body}\n              projectId={sanityClient.clientConfig.projectId}\n              dataset={sanityClient.clientConfig.dataset}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n \n}","/Users/Divya/Desktop/yendapallyportfolio/src/components/NavBar.js",["64"],"/Users/Divya/Desktop/yendapallyportfolio/src/components/Resume.js",["65","66","67"],"import React, {useEffect, useState} from \"react\";\nimport \"../App.css\";\nimport resume from \"../Yendapally_Divya_Resume.pdf\"\nimport resumeImage from \"../resumeimage.jpg\"\nexport default function Resume(){\n    \n    \n    \n    return (\n        \n        <main>\n             <h2 className = \"font-Segoe UI text-1xl text-blue-600 mb-4\">\n             <p>  <a href={resume}> DOWNLOAD MY RESUME </a></p>\n                        </h2>\n            \n            <img src= {resumeImage} width= \"800\" height = \"121\" class= \"center border\"/>\n                        \n                    \n        </main>\n    );\n}","/Users/Divya/Desktop/yendapallyportfolio/src/components/Project.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/components/About.js",["68","69"],"import React, {useEffect, useState} from \"react\";\nimport sanityClient from \"../client.js\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport \"../App.css\";\nimport resume from \"../Yendapally_Divya_Resume.pdf\"\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source){\n    return builder.image(source);\n}\n\nexport default function About(){\n    \n    const [author, setAuthor] = useState(null);\n\n    useEffect(() => { \n        sanityClient\n            .fetch(\n                `*[_type == \"author\"]{\n                name,\n                bio,\n                \"authorImage\": image.asset -> url\n                }`) .then((data) => setAuthor(data[0]))\n                    .catch(console.error);\n    },[]);\n    \n    if (!author) return <div> loading.. </div>\n\n    \n    \n    \n    \n    return (\n        <main className= \"relative\">\n             \n            <div classname= \"p-10 lg:pt-48 container mx-auto relative\">\n              \n                <section className = \"bg_image lg:flex p-40 absolute object-cover w-full h-full \">\n               \n                    <img src = {urlFor(author.authorImage).url()} className= \"responsive mr-8 border\" alt={author.name}/>\n                    <div className = \"text-lg flex flex-col justify-center\">\n                        <h1 className = \"text-lg flex-col justify-center font-Segoe UI text-6xl text-gray-600 mb-6\">\n                            Hey there. I'm {\" \"}\n                            <span className= \"text-black\">{author.name}</span>\n                        </h1>\n                        <div className= \"prose lg:prose-xl text-black\">\n                            <BlockContent blocks = {author.bio} projectId= \"m7y80hkd\" dataset= \"production\"/>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </main>\n    );\n}","/Users/Divya/Desktop/yendapallyportfolio/src/client.js",[],"/Users/Divya/Desktop/yendapallyportfolio/src/OnClick.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":46,"column":22,"nodeType":"77","messageId":"78","endLine":46,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":48,"column":25,"nodeType":"77","messageId":"78","endLine":48,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":100,"column":30,"nodeType":"77","messageId":"78","endLine":100,"endColumn":32},{"ruleId":null,"fatal":true,"severity":2,"message":"79","line":5,"column":2},{"ruleId":"80","severity":1,"message":"81","line":1,"column":16,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":35},{"ruleId":"85","severity":1,"message":"86","line":16,"column":13,"nodeType":"87","endLine":16,"endColumn":89},{"ruleId":"80","severity":1,"message":"88","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":18,"column":9,"nodeType":"91","messageId":"92","endLine":24,"endColumn":26,"fix":"93"},{"ruleId":"80","severity":1,"message":"94","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m {\u001b[33mSocialIcon\u001b[39m} from \u001b[32m\"react-social-icons\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[32m'../index.css'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[32m'../OnClick.js'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>\u001b[39m a902b443d697ff3d4965c06ba307859d3368d202\u001b[0m","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'resume' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"97","text":"98"},"'React' is defined but never used.","no-global-assign","no-unsafe-negation",[684,686],"."]